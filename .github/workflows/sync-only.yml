name: Sync upstream (master) to fork

on:
  schedule:
    - cron: '*/15 * * * *' # –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
  workflow_dispatch: {} # —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é

env:
  UPSTREAM_OWNER: muk-as
  UPSTREAM_REPO: DOTA2_WEB
  UPSTREAM_BRANCH: master   # –≤–µ—Ç–∫–∞ –≤ –∞–ø—Å—Ç—Ä–∏–º–µ
  FORK_BRANCH: master       # –≤–µ—Ç–∫–∞ –≤ —Ñ–æ—Ä–∫–µ

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã push —Å—Ä–∞–±–æ—Ç–∞–ª

    steps:
      - name: üß© Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã merge

      - name: üíæ Save current fork SHA
        id: before
        run: echo "before_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: üîó Add upstream and fetch
        run: |
          git remote add upstream https://github.com/${{ env.UPSTREAM_OWNER }}/${{ env.UPSTREAM_REPO }}.git || true
          git fetch --no-tags upstream

      - name: ‚öôÔ∏è Configure git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: üîÑ Merge upstream into fork branch
        id: merge
        run: |
          git checkout ${{ env.FORK_BRANCH }} || git switch ${{ env.FORK_BRANCH }}
          if git merge --ff-only upstream/${{ env.UPSTREAM_BRANCH }} -m "Fast-forward merge upstream/${{ env.UPSTREAM_BRANCH }}" 2>/dev/null; then
            echo "merged=ff" >> $GITHUB_OUTPUT
            echo "‚úÖ Fast-forward merge –≤—ã–ø–æ–ª–Ω–µ–Ω."
          else
            echo "‚ÑπÔ∏è Fast-forward –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–π merge..."
            git merge --no-edit upstream/${{ env.UPSTREAM_BRANCH }} || true
            echo "merged=merge" >> $GITHUB_OUTPUT
          fi

      - name: üíæ Save new SHA
        id: after
        run: echo "after_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: üöÄ Compare SHAs and push if changed
        id: push
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ steps.before.outputs.before_sha }}" != "${{ steps.after.outputs.after_sha }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "‚¨ÜÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è push..."
            git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:${{ env.FORK_BRANCH }}
            echo "‚úÖ –§–æ—Ä–∫ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å upstream."
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî –≤—Å—ë —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ."
          fi

      - name: üì¢ Send Dota updates to Discord
        if: steps.push.outputs.changed == 'true'
        run: |
          while read -r hash; do
            if [ -z "$hash" ]; then continue; fi

            title=$(git show -s --format=%s $hash | sed 's/"/\\"/g')
            body=$(git show -s --format=%b $hash | sed 's/"/\\"/g')
            files_changed=$(git show --stat --oneline $hash | tail -n 1 | sed 's/"/\\"/g')
            url="https://github.com/${{ github.repository }}/commit/$hash"

            if echo "$title $body" | grep -iq "Dota"; then
              # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –ø–æ —Ç–∏–ø—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
              color=3447003  # —Å–∏–Ω–∏–π (default)
              if echo "$title" | grep -iq "Experimental"; then
                color=10181046  # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
              elif echo "$title" | grep -iq "Staging"; then
                color=15105570  # –æ—Ä–∞–Ω–∂–µ–≤—ã–π
              fi

              # –§–æ—Ä–º–∏—Ä—É–µ–º embed JSON
              json=$(jq -n \
                --arg t "#dota_update" \
                --arg title "$title" \
                --arg desc "$body\n\n**$files_changed**" \
                --arg url "$url" \
                --argjson color "$color" \
                '{embeds: [{title: $t, description: ($title + "\n" + $desc), color: $color, url: $url}]}')

              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Discord
              curl -H "Content-Type: application/json" \
                   -X POST \
                   -d "$json" \
                   "${{ secrets.DISCORD_WEBHOOK }}"
            fi
          done < <(git log --no-merges --pretty=format:"%H" ${{ steps.before.outputs.before_sha }}..${{ steps.after.outputs.after_sha }} | tac)
